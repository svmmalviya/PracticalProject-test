// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PracticalProject.AppContext;

#nullable disable

namespace PracticalProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231003190940_Dbinitialization")]
    partial class Dbinitialization
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PracticalProject.AppContext.DBModels.InvoiceDetail", b =>
                {
                    b.Property<Guid>("InvoiceDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("InvoiceId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.HasKey("InvoiceDetailId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ProductId");

                    b.ToTable("InvoiceDetails");
                });

            modelBuilder.Entity("PracticalProject.AppContext.DBModels.InvoiceMaster", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.HasKey("InvoiceId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("PracticalProject.AppContext.DBModels.ProductMaster", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("ac2aa36d-a072-4a66-a7f6-9108d20a2649"),
                            ProductName = "Samsung-battery"
                        },
                        new
                        {
                            ProductId = new Guid("f6035a09-0628-4ef2-93a0-3589173cab25"),
                            ProductName = "Nokia-battery"
                        });
                });

            modelBuilder.Entity("PracticalProject.AppContext.DBModels.InvoiceDetail", b =>
                {
                    b.HasOne("PracticalProject.AppContext.DBModels.InvoiceMaster", "invoice")
                        .WithMany("invoiceDetails")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PracticalProject.AppContext.DBModels.ProductMaster", "Product")
                        .WithMany("invoiceDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("invoice");
                });

            modelBuilder.Entity("PracticalProject.AppContext.DBModels.InvoiceMaster", b =>
                {
                    b.Navigation("invoiceDetails");
                });

            modelBuilder.Entity("PracticalProject.AppContext.DBModels.ProductMaster", b =>
                {
                    b.Navigation("invoiceDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
